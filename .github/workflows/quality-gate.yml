name: Quality-gate

on:
  workflow_call:
    inputs:
      SONAR_CHECKS:
        type: boolean
        required: false
        default: false
      CODEQL_CHECKS:
        type: boolean
        required: false
        default: false
      CUCUMBER_CHECKS:
        type: boolean
        required: false
        default: false
      GITHUB_ENVIRONMENT:
        required: false
        type: string
        default: "development"
      PROFILE_ENV:
        required: true
        type: string
      SKIP_TEST:
        required: true
        type: string      
        default: false        
      JDK_VERSION:
        type: string
        required: false
        default: 8          
    secrets:
      SONAR_TOKEN:
        required: false
jobs:

  test-evn:
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}  
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: test
    steps:

    - run: | 
        echo 'printing envs'
        echo ${{ secrets.SONAR_TOKEN }}  
  codeql:
    if: ${{ inputs.CODEQL_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: CodeQL checks
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2

    - name: ‚öôÔ∏è Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ inputs.JDK_VERSION }}    
        distribution: 'adopt'
        cache: maven

    - name: üíæ Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 

    - name: üî® Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        config-file: ./.github/codeql/codeql-config.yml
        languages: java

    - name: üîß Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: üßê Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  sonar:
    if: ${{ inputs.SONAR_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: Sonar checks
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2

    - name: ‚öôÔ∏è Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ inputs.JDK_VERSION }}    
        distribution: 'adopt'
        cache: maven

    - name: üíæ Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 

    - name: üö® Test
      run: mvn clean verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dmaven.test.skip=${{ inputs.SKIP_TEST }} -P${{ inputs.PROFILE_ENV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚úÖ SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
      timeout-minutes: 5
      with:
        scanMetadataReportFile: ${{ github.workspace }}/target/sonar/report-task.txt  # optional, default is .scannerwork/report-task.txt
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cucumber:
    if: ${{ inputs.CUCUMBER_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: Cucumber checks
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2

    - name: Test
      run: mvn clean verify -P${{ inputs.PROFILE_ENV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cucumber report
      uses: deblockt/cucumber-report-annotations-action@v1.7
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: "${{ github.workspace }}/target/cucumber/cucumber-report.json"     

