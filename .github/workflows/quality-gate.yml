name: Quality-gate

on:
  workflow_call:
    inputs:
      SONAR_CHECKS:
        type: boolean
        required: false
        default: false
      CODEQL_CHECKS:
        type: boolean
        required: false
        default: false
      CUCUMBER_CHECKS:
        type: boolean
        required: false
        default: false
      GITHUB_ENVIRONMENT:
        required: false
        type: string
        default: "development"
      PROFILE_ENV:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: false

jobs:
  codeql:
    if: ${{ inputs.CODEQL_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: CodeQL checks
    steps:

    - name: 🛎️ Checkout
      uses: actions/checkout@v3

    - name: ⚙️ Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    # - name: 💾 Cache the Maven packages to speed up build
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2

    - name: 🔨 Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        config-file: ./.github/codeql/codeql-config.yml
        languages: java

    - name: 🔧 Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: 🧐 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  sonar:
    if: ${{ inputs.SONAR_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: Sonar checks
    steps:

    - name: 🛎️ Checkout
      uses: actions/checkout@v3

    - name: ⚙️ Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    # - name: 💾 Cache the Maven packages to speed up build
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2 

    - name: 🧐 Test
      run: mvn clean verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }} -P${{ inputs.PROFILE_ENV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ✅ SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
      timeout-minutes: 5
      with:
        scanMetadataReportFile: ${{ github.workspace }}/target/sonar/report-task.txt  # optional, default is .scannerwork/report-task.txt
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cucumber:
    if: ${{ inputs.CUCUMBER_CHECKS }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: Cucumber checks
    steps:

    - name: 🛎️ Checkout
      uses: actions/checkout@v3

    - name: ⚙️ Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: 🧐 Test
      run: mvn clean verify -P${{ inputs.PROFILE_ENV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ✅ Cucumber report
      uses: deblockt/cucumber-report-annotations-action@v1.7
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: "${{ github.workspace }}/target/cucumber/cucumber-report.json"

    - name: ⬇️ Upload artifact cucumber report
      uses: actions/upload-artifact@v3
      with:
        name: cucumber-report-html.zip
        path: "${{ github.workspace }}/target/cucumber-html-reports"

