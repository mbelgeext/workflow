name: Quality-gate

on:
  workflow_call:
    inputs:
      SONAR_URL:
        type: string
        required: false
        default: "http://bycnit-sonarqube.westeurope.cloudapp.azure.com"        
      GITHUB_ENVIRONMENT:
        required: false
        type: string
        default: "development"
    secrets:
      SONAR_TOKEN:
        required: false

jobs:
  sonar:
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
    name: Sonar checks
    steps:
    - name: 🛎️ Check out
      uses: actions/checkout@v2

    - name: ⚙️ Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: ⚙️ Setup Node 14.x
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: 💾 cache npm
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.npm-cache.outputs.dir }}

        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: ⚙️ Install Dependencies
      if:
        steps.npm-cache.outputs.cache-hit != 'true'
      run: |
        npm install
        npm ci
    - name: 🚨 Test
      run: |
        npm run test
    - name: 📉 Generate report
      run: |
        npm run lint:report
    - name: 👁️‍🗨️ Run Sonar Scan
      run: |
        npm run sonar -- -Dsonar.host.url=${{ inputs.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}       
    - name: ✅ SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
      timeout-minutes: 5
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     

  
