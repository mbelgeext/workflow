name: Deploy

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: true
        type: string 
      ACR_URL:
        required: true
        type: string
      ACR_USERNAME:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
      RELEASE_VERSION:
        required: true
        type: string
      GITHUB_ENVIRONMENT:
        required: false
        type: string
        default: "development"
    secrets:
      ACR_PASSWORD:
        required: true
  
jobs:
  publish:
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}
    name: Publish
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2 

    - name: üîñ Get release version
      run: | 
         echo "${{ inputs.RELEASE_VERSION }}"

    - name: ‚¨ÜÔ∏è Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.APPLICATION_NAME }}
        path: ${{ github.workspace }}/target    

    - name: üë∑ Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: üîíÔ∏è Log in to registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.ACR_URL }}
        username: ${{ inputs.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }} 

    - name: üê≥ Build Docker image
      uses: docker/build-push-action@v2
      with:
        repository: ${{ inputs.IMAGE_NAME }}
        tags: ${{ inputs.IMAGE_NAME }}:${{ inputs.RELEASE_VERSION }}
        file: ./Dockerfile
        context: ./    
        push: false       
        load: true 

    - name: üöÄ Push container image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ inputs.IMAGE_NAME }}:${{ inputs.RELEASE_VERSION }}, ${{ inputs.IMAGE_NAME }}:latest
        file: ./Dockerfile
        context: ./    
        no-cache: true
        