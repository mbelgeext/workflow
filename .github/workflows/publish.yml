name: Publish

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: true
        type: string 
      ACR_URL:
        required: true
        type: string
      ACR_USERNAME:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      ACR_PASSWORD:
        required: true
  
jobs:
  publish-to-acr:
    runs-on: 'ubuntu-latest'
    environment: development    
    
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2 

    - name: Get release version
      run: | 
         echo "${{ needs.build-and-test.outputs.release-version }}"

    - name: ‚¨ÜÔ∏è Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.APPLICATION_NAME }}
        path: ${{ github.workspace }}/target

    - name: Check File exists
      run: |
        ls ${{ github.workspace }}/target          

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.ACR_URL }}
        username: ${{ inputs.ACR_USERNAME }}
        password: ${{ inputs.ACR_PASSWORD }} 

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        repository: ${{ inputs.IMAGE_NAME }}
        tags: ${{ inputs.IMAGE_NAME }}:${{ needs.build-and-test.outputs.release-version }}
        file: ./Dockerfile
        context: ./    
        push: false       
        load: true 

    - name: Push container image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ inputs.IMAGE_NAME }}:${{ needs.build-and-test.outputs.release-version }}, ${{ inputs.IMAGE_NAME }}:latest
        file: ./Dockerfile
        context: ./    
        no-cache: true
        