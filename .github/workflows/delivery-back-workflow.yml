name: Reusable workflow

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      ServiceName:
        required: true
        type: string          
    secrets:
      RTU_SONAR_BYCNIT_TOKEN:
        required: true
      #GITHUB_TOKEN: 
        #required: true
        
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{steps.project-version.outputs.RELEASE_VERSION}}
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]  
    steps:
    - uses: actions/checkout@v2     
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        config-file: ./.github/codeql/codeql-config.yml       
        languages: ${{ matrix.language }}      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Set release version
      id: project-version
      run: | 
        RELEASE_VERSION_DEV=$(echo $( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )) 
        echo "::set-output name=RELEASE_VERSION::$RELEASE_VERSION_DEV"
    - name: Show release version
      run: | 
         echo "${{steps.project-version.outputs.RELEASE_VERSION}}" 
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2   
        
    - name: Test
      run: mvn clean verify sonar:sonar -Dsonar.login=${{ secrets.RTU_SONAR_BYCNIT_TOKEN }} -Pdocker 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
      timeout-minutes: 5
      with:
        scanMetadataReportFile: ${{ github.workspace }}/target/sonar/report-task.txt  # optional, default is .scannerwork/report-task.txt
      env: 
        SONAR_TOKEN: ${{ secrets.RTU_SONAR_BYCNIT_TOKEN }}   

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      
    - name: Build and deploy package
      run: mvn  -B -DskipTests -Darguments=-DskipTests deploy -Pdocker
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
    - name: Check File exists
      run: |
        ls ${{ github.workspace }}/target 
        ls ${{ github.workspace }}/target/sonar 
 
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.ServiceName }}
        path: '${{ github.workspace }}/target/${{ inputs.ServiceName }}.war'  
    - uses: deblockt/cucumber-report-annotations-action@v1.7
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: "${{ github.workspace }}/target/cucumber/cucumber-report.json"  
