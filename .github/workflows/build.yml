name: Build

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: true
        type: string
    outputs:
      RELEASE_VERSION:
        description: "Version number"
        value: ${{ jobs.build.outputs.RELEASE_VERSION }}
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development    
    outputs:
      RELEASE_VERSION: ${{ steps.project-version.outputs.RELEASE_VERSION }}
    name: Build
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v2 
   
    - name: ‚öôÔ∏è Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: üîñ Manage release version
      id: project-version
      run: | 
        RELEASE_VERSION_DEV=$(echo $( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )) 
        echo "::set-output name=RELEASE_VERSION::$RELEASE_VERSION_DEV"
        echo "Version : $RELEASE_VERSION_DEV"

    - name: üíæ Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2   
      
    - name: üèóÔ∏è Build 
      run: mvn  -B -DskipTests -Darguments=-DskipTests clean install -Pdev
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚¨áÔ∏è Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.APPLICATION_NAME }}
        path: '${{ github.workspace }}/target/${{ inputs.APPLICATION_NAME }}.jar' 