name: Build

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: true
        type: string
      PROFILE_ENV:
        required: true
        type: string
      GITHUB_ENVIRONMENT:
        required: false
        type: string
        default: "development"
      RELEASE_INCREMENT:
        type: boolean
        required: false
        default: false
    outputs:
      RELEASE_VERSION:
        description: "Version number"
        value: ${{ jobs.build.outputs.RELEASE_VERSION }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}    
    outputs:
      RELEASE_VERSION: ${{ steps.project-version.outputs.RELEASE_VERSION }}
    name: Build
    steps:

    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v3
   
  #  - name: üíæ Cache the Maven packages to speed up build
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.m2
  #       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #       restore-keys: ${{ runner.os }}-m2   

    - name: ‚öôÔ∏è Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: üîñ Manage release version
      id: project-version
      run: | 
        RELEASE_VERSION_MVN=''
        if ${{ inputs.RELEASE_INCREMENT }}; then
          mvn release:update-versions -DautoVersionSubmodules=true
          RELEASE_VERSION=$(echo $( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )) 
          echo "Version auto incremented : $RELEASE_VERSION"
          RELEASE_VERSION_MVN='release:prepare'
        else
          RELEASE_VERSION_DEV=$(echo $( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )) 
          echo "::set-output name=RELEASE_VERSION::$RELEASE_VERSION_DEV"
          echo "Version from pom : $RELEASE_VERSION_DEV"
        fi
      
    - name: üèóÔ∏è Build 
      run: mvn ${{ echo $RELEASE_VERSION_MVN }} -B -DskipTests -Darguments=-DskipTests clean install -P${{ inputs.PROFILE_ENV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚¨áÔ∏è Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.APPLICATION_NAME }}
        path: '${{ github.workspace }}/target/${{ inputs.APPLICATION_NAME }}.jar' 